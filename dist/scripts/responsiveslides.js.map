{"version":3,"sources":["../assets/scripts/responsiveslides.js"],"names":["$","window","i","fn","responsiveSlides","options","settings","extend","auto","speed","timeout","pager","nav","random","pause","pauseControls","prevText","nextText","maxwidth","navContainer","manualControls","namespace","before","noop","after","this","each","vendor","selectTab","startCycle","restartCycle","rotate","$tabs","$this","index","$slide","children","length","size","fadeTime","parseFloat","waitTime","maxw","namespaceIdx","navClass","activeClass","visibleClass","slideClassPrefix","$pager","visible","float","position","opacity","zIndex","hidden","supportsTransitions","docBody","document","body","documentElement","styles","style","prop","charAt","toUpperCase","substr","slideTo","idx","removeClass","css","eq","addClass","setTimeout","stop","fadeOut","fadeIn","sort","Math","round","empty","append","id","hide","show","-webkit-transition","-moz-transition","-o-transition","transition","tabMarkup","n","find","closest","setInterval","clearInterval","hover","bind","e","preventDefault","queue","navMarkup","$trigger","$prev","filter","$visibleClass","prevIdx","nextIdx","maxWidth","widthSupport","width","jQuery"],"mappings":"CAUA,SAAAA,EAAAC,EAAAC,GACAF,EAAAG,GAAAC,iBAAA,SAAAC,GAGA,GAAAC,GAAAN,EAAAO,QACAC,MAAA,EACAC,MAAA,IACAC,QAAA,IACAC,OAAA,EACAC,KAAA,EACAC,QAAA,EACAC,OAAA,EACAC,eAAA,EACAC,SAAA,WACAC,SAAA,OACAC,SAAA,GACAC,aAAA,GACAC,eAAA,GACAC,UAAA,UACAC,OAAAtB,EAAAuB,KACAC,MAAAxB,EAAAuB,MACAlB,EAEA,OAAAoB,MAAAC,KAAA,WAGAxB,GAEA,IAGAyB,GACAC,EACAC,EACAC,EACAC,EACAC,EARAC,EAAAjC,EAAAyB,MAWAS,EAAA,EACAC,EAAAF,EAAAG,WACAC,EAAAF,EAAAG,OACAC,EAAAC,WAAAlC,EAAAG,OACAgC,EAAAD,WAAAlC,EAAAI,SACAgC,EAAAF,WAAAlC,EAAAY,UAGAG,EAAAf,EAAAe,UACAsB,EAAAtB,EAAAnB,EAGA0C,EAAAvB,EAAA,QAAAsB,EAAA,OACAE,EAAAxB,EAAA,QACAyB,EAAAH,EAAA,MACAI,EAAAJ,EAAA,KAGAK,EAAAhD,EAAA,cAAAqB,EAAA,SAAAsB,EAAA,aAGAM,GAAAC,QAAA,OAAAC,SAAA,WAAAC,QAAA,EAAAC,OAAA,GACAC,GAAAJ,QAAA,OAAAC,SAAA,WAAAC,QAAA,EAAAC,OAAA,GAGAE,EAAA,WACA,GAAAC,GAAAC,SAAAC,MAAAD,SAAAE,gBACAC,EAAAJ,EAAAK,MACAC,EAAA,YACA,IAAA,gBAAAF,GAAAE,GACA,OAAA,CAGAnC,IAAA,MAAA,SAAA,QAAA,IAAA,MACAmC,EAAAA,EAAAC,OAAA,GAAAC,cAAAF,EAAAG,OAAA,EACA,IAAA/D,EACA,KAAAA,EAAA,EAAAA,EAAAyB,EAAAU,OAAAnC,IACA,GAAA,gBAAA0D,GAAAjC,EAAAzB,GAAA4D,GACA,OAAA,CAGA,QAAA,KAIAI,EAAA,SAAAC,GACA7D,EAAAgB,OAAA6C,GAEAZ,GACApB,EACAiC,YAAAtB,GACAuB,IAAAf,GACAgB,GAAAH,GACAI,SAAAzB,GACAuB,IAAApB,GACAf,EAAAiC,EACAK,WAAA,WACAlE,EAAAkB,MAAA2C,IACA5B,IAGAJ,EACAsC,OACAC,QAAAnC,EAAA,WACAvC,EAAAyB,MACA2C,YAAAtB,GACAuB,IAAAf,GACAe,IAAA,UAAA,KAEAC,GAAAH,GACAQ,OAAApC,EAAA,WACAvC,EAAAyB,MACA8C,SAAAzB,GACAuB,IAAApB,GACA3C,EAAAkB,MAAA2C,GACAjC,EAAAiC,IAiDA,IA3CA7D,EAAAO,SACAsB,EAAAyC,KAAA,WACA,MAAAC,MAAAC,MAAAD,KAAAhE,UAAA,KAEAoB,EACA8C,QACAC,OAAA7C,IAIAA,EAAAT,KAAA,SAAAxB,GACAuB,KAAAwD,GAAAlC,EAAA7C,IAIA+B,EAAAsC,SAAAlD,EAAA,IAAAsB,GACAtC,GAAAA,EAAAa,UACAe,EAAAoC,IAAA,YAAA3B,GAIAP,EACA+C,OACAb,IAAAf,GACAgB,GAAA,GACAC,SAAAzB,GACAuB,IAAApB,GACAkC,OAGA5B,GACApB,EACAgD,OACAd,KAEAe,qBAAA,WAAA7C,EAAA,iBACA8C,kBAAA,WAAA9C,EAAA,iBACA+C,gBAAA,WAAA/C,EAAA,iBACAgD,WAAA,WAAAhD,EAAA,mBAKAJ,EAAAG,OAAA,EAAA,CAGA,GAAAG,EAAAF,EAAA,IACA,MAIA,IAAAjC,EAAAK,QAAAL,EAAAc,eAAA,CACA,GAAAoE,KACArD,GAAAT,KAAA,SAAAxB,GACA,GAAAuF,GAAAvF,EAAA,CACAsF,IACA,0BACAzC,EAAA0C,EAAA,KAAAA,EAAA,cAGAzC,EAAAgC,OAAAQ,GAGAnF,EAAAc,aACAnB,EAAAM,EAAAa,cAAA6D,OAAAhC,GAEAf,EAAAT,MAAAwB,GAkHA,GA7GA1C,EAAAc,iBACA4B,EAAAhD,EAAAM,EAAAc,gBACA4B,EAAAuB,SAAAlD,EAAA,SAAAsB,EAAA,WAIArC,EAAAK,OAAAL,EAAAc,iBACA4B,EAAA0C,KAAA,MAAAhE,KAAA,SAAAxB,GACAF,EAAAyB,MAAA8C,SAAAxB,GAAA7C,EAAA,OAKAI,EAAAK,OAAAL,EAAAc,kBACAY,EAAAgB,EAAA0C,KAAA,KAGA9D,EAAA,SAAAuC,GACAnC,EACA2D,QAAA,MACAvB,YAAAvB,GACAyB,GAAAH,GACAI,SAAA1B,KAKAvC,EAAAE,OAEAqB,EAAA,WACAE,EAAA6D,YAAA,WAGAzD,EAAAsC,MAAA,GAAA,EAEA,IAAAN,GAAAjC,EAAA,EAAAG,EAAAH,EAAA,EAAA,GAGA5B,EAAAK,OAAAL,EAAAc,iBACAQ,EAAAuC,GAGAD,EAAAC,IACA1B,OAQAX,EAAA,WACAxB,EAAAE,OAEAqF,cAAA9D,GAEAF,MAOAvB,EAAAQ,OACAmB,EAAA6D,MAAA,WACAD,cAAA9D,IACA,WACAD,OAKAxB,EAAAK,OAAAL,EAAAc,kBACAY,EAAA+D,KAAA,QAAA,SAAAC,GACAA,EAAAC,iBAEA3F,EAAAS,eACAe,GAIA,IAAAqC,GAAAnC,EAAAE,MAAAT,KAGAS,KAAAiC,GAAAnE,EAAA,IAAA8C,GAAAoD,MAAA,MAAA7D,SAKAT,EAAAuC,GAGAD,EAAAC,MAEAG,GAAA,GACAqB,QAAA,MACApB,SAAA1B,GAGAvC,EAAAS,eACAiB,EAAA8D,MAAA,WACAD,cAAA9D,IACA,WACAD,OAMAxB,EAAAM,IAAA,CACA,GAAAuF,GACA,sBAAAvD,EAAA,UAAAtC,EAAAU,SAAA,0BACA4B,EAAA,UAAAtC,EAAAW,SAAA,MAGAZ,GAAAc,aACAnB,EAAAM,EAAAa,cAAA6D,OAAAmB,GAEAlE,EAAAT,MAAA2E,EAGA,IAAAC,GAAApG,EAAA,IAAA2C,EAAA,QACA0D,EAAAD,EAAAE,OAAA,QAGAF,GAAAL,KAAA,QAAA,SAAAC,GACAA,EAAAC,gBAEA,IAAAM,GAAAvG,EAAA,IAAA8C,EAGA,KAAAyD,EAAAL,MAAA,MAAA7D,OAAA,CAcA,GAAA8B,GAAAhC,EAAAD,MAAAqE,GACAC,EAAArC,EAAA,EACAsC,EAAAtC,EAAA,EAAA9B,EAAAH,EAAA,EAAA,CAGAgC,GAAAlE,EAAAyB,MAAA,KAAA4E,EAAA,GAAAG,EAAAC,IACAnG,EAAAK,OAAAL,EAAAc,iBACAQ,EAAA5B,EAAAyB,MAAA,KAAA4E,EAAA,GAAAG,EAAAC,GAGAnG,EAAAS,eACAe,OAKAxB,EAAAS,eACAqF,EAAAN,MAAA,WACAD,cAAA9D,IACA,WACAD,OAQA,GAAA,mBAAA2B,UAAAC,KAAAG,MAAA6C,UAAArG,EAAAa,SAAA,CACA,GAAAyF,GAAA,WACA1E,EAAAoC,IAAA,QAAA,QACApC,EAAA2E,QAAAlE,GACAT,EAAAoC,IAAA,QAAA3B,GAKAiE,KACA3G,EAAAC,GAAA8F,KAAA,SAAA,WACAY,WAOAE,OAAApF,KAAA","file":"responsiveslides.js","sourcesContent":["/*! ResponsiveSlides.js v1.54\n * http://responsiveslides.com\n * http://viljamis.com\n *\n * Copyright (c) 2011-2012 @viljamis\n * Available under the MIT license\n */\n\n/*jslint browser: true, sloppy: true, vars: true, plusplus: true, indent: 2 */\n\n(function ($, window, i) {\n  $.fn.responsiveSlides = function (options) {\n\n    // Default settings\n    var settings = $.extend({\n      \"auto\": true,             // Boolean: Animate automatically, true or false\n      \"speed\": 500,             // Integer: Speed of the transition, in milliseconds\n      \"timeout\": 4000,          // Integer: Time between slide transitions, in milliseconds\n      \"pager\": false,           // Boolean: Show pager, true or false\n      \"nav\": false,             // Boolean: Show navigation, true or false\n      \"random\": false,          // Boolean: Randomize the order of the slides, true or false\n      \"pause\": false,           // Boolean: Pause on hover, true or false\n      \"pauseControls\": true,    // Boolean: Pause when hovering controls, true or false\n      \"prevText\": \"Previous\",   // String: Text for the \"previous\" button\n      \"nextText\": \"Next\",       // String: Text for the \"next\" button\n      \"maxwidth\": \"\",           // Integer: Max-width of the slideshow, in pixels\n      \"navContainer\": \"\",       // Selector: Where auto generated controls should be appended to, default is after the <ul>\n      \"manualControls\": \"\",     // Selector: Declare custom pager navigation\n      \"namespace\": \"rslides\",   // String: change the default namespace used\n      \"before\": $.noop,         // Function: Before callback\n      \"after\": $.noop           // Function: After callback\n    }, options);\n\n    return this.each(function () {\n\n      // Index for namespacing\n      i++;\n\n      var $this = $(this),\n\n        // Local variables\n        vendor,\n        selectTab,\n        startCycle,\n        restartCycle,\n        rotate,\n        $tabs,\n\n        // Helpers\n        index = 0,\n        $slide = $this.children(),\n        length = $slide.size(),\n        fadeTime = parseFloat(settings.speed),\n        waitTime = parseFloat(settings.timeout),\n        maxw = parseFloat(settings.maxwidth),\n\n        // Namespacing\n        namespace = settings.namespace,\n        namespaceIdx = namespace + i,\n\n        // Classes\n        navClass = namespace + \"_nav \" + namespaceIdx + \"_nav\",\n        activeClass = namespace + \"_here\",\n        visibleClass = namespaceIdx + \"_on\",\n        slideClassPrefix = namespaceIdx + \"_s\",\n\n        // Pager\n        $pager = $(\"<ul class='\" + namespace + \"_tabs \" + namespaceIdx + \"_tabs' />\"),\n\n        // Styles for visible and hidden slides\n        visible = {\"float\": \"left\", \"position\": \"relative\", \"opacity\": 1, \"zIndex\": 2},\n        hidden = {\"float\": \"none\", \"position\": \"absolute\", \"opacity\": 0, \"zIndex\": 1},\n\n        // Detect transition support\n        supportsTransitions = (function () {\n          var docBody = document.body || document.documentElement;\n          var styles = docBody.style;\n          var prop = \"transition\";\n          if (typeof styles[prop] === \"string\") {\n            return true;\n          }\n          // Tests for vendor specific prop\n          vendor = [\"Moz\", \"Webkit\", \"Khtml\", \"O\", \"ms\"];\n          prop = prop.charAt(0).toUpperCase() + prop.substr(1);\n          var i;\n          for (i = 0; i < vendor.length; i++) {\n            if (typeof styles[vendor[i] + prop] === \"string\") {\n              return true;\n            }\n          }\n          return false;\n        })(),\n\n        // Fading animation\n        slideTo = function (idx) {\n          settings.before(idx);\n          // If CSS3 transitions are supported\n          if (supportsTransitions) {\n            $slide\n              .removeClass(visibleClass)\n              .css(hidden)\n              .eq(idx)\n              .addClass(visibleClass)\n              .css(visible);\n            index = idx;\n            setTimeout(function () {\n              settings.after(idx);\n            }, fadeTime);\n          // If not, use jQuery fallback\n          } else {\n            $slide\n              .stop()\n              .fadeOut(fadeTime, function () {\n                $(this)\n                  .removeClass(visibleClass)\n                  .css(hidden)\n                  .css(\"opacity\", 1);\n              })\n              .eq(idx)\n              .fadeIn(fadeTime, function () {\n                $(this)\n                  .addClass(visibleClass)\n                  .css(visible);\n                settings.after(idx);\n                index = idx;\n              });\n          }\n        };\n\n      // Random order\n      if (settings.random) {\n        $slide.sort(function () {\n          return (Math.round(Math.random()) - 0.5);\n        });\n        $this\n          .empty()\n          .append($slide);\n      }\n\n      // Add ID's to each slide\n      $slide.each(function (i) {\n        this.id = slideClassPrefix + i;\n      });\n\n      // Add max-width and classes\n      $this.addClass(namespace + \" \" + namespaceIdx);\n      if (options && options.maxwidth) {\n        $this.css(\"max-width\", maxw);\n      }\n\n      // Hide all slides, then show first one\n      $slide\n        .hide()\n        .css(hidden)\n        .eq(0)\n        .addClass(visibleClass)\n        .css(visible)\n        .show();\n\n      // CSS transitions\n      if (supportsTransitions) {\n        $slide\n          .show()\n          .css({\n            // -ms prefix isn't needed as IE10 uses prefix free version\n            \"-webkit-transition\": \"opacity \" + fadeTime + \"ms ease-in-out\",\n            \"-moz-transition\": \"opacity \" + fadeTime + \"ms ease-in-out\",\n            \"-o-transition\": \"opacity \" + fadeTime + \"ms ease-in-out\",\n            \"transition\": \"opacity \" + fadeTime + \"ms ease-in-out\"\n          });\n      }\n\n      // Only run if there's more than one slide\n      if ($slide.size() > 1) {\n\n        // Make sure the timeout is at least 100ms longer than the fade\n        if (waitTime < fadeTime + 100) {\n          return;\n        }\n\n        // Pager\n        if (settings.pager && !settings.manualControls) {\n          var tabMarkup = [];\n          $slide.each(function (i) {\n            var n = i + 1;\n            tabMarkup +=\n              \"<li>\" +\n              \"<a href='#' class='\" + slideClassPrefix + n + \"'>\" + n + \"</a>\" +\n              \"</li>\";\n          });\n          $pager.append(tabMarkup);\n\n          // Inject pager\n          if (options.navContainer) {\n            $(settings.navContainer).append($pager);\n          } else {\n            $this.after($pager);\n          }\n        }\n\n        // Manual pager controls\n        if (settings.manualControls) {\n          $pager = $(settings.manualControls);\n          $pager.addClass(namespace + \"_tabs \" + namespaceIdx + \"_tabs\");\n        }\n\n        // Add pager slide class prefixes\n        if (settings.pager || settings.manualControls) {\n          $pager.find('li').each(function (i) {\n            $(this).addClass(slideClassPrefix + (i + 1));\n          });\n        }\n\n        // If we have a pager, we need to set up the selectTab function\n        if (settings.pager || settings.manualControls) {\n          $tabs = $pager.find('a');\n\n          // Select pager item\n          selectTab = function (idx) {\n            $tabs\n              .closest(\"li\")\n              .removeClass(activeClass)\n              .eq(idx)\n              .addClass(activeClass);\n          };\n        }\n\n        // Auto cycle\n        if (settings.auto) {\n\n          startCycle = function () {\n            rotate = setInterval(function () {\n              \n              // Clear the event queue\n              $slide.stop(true, true);\n\n              var idx = index + 1 < length ? index + 1 : 0;\n\n              // Remove active state and set new if pager is set\n              if (settings.pager || settings.manualControls) {\n                selectTab(idx);\n              }\n\n              slideTo(idx);\n            }, waitTime);\n          };\n\n          // Init cycle\n          startCycle();\n        }\n\n        // Restarting cycle\n        restartCycle = function () {\n          if (settings.auto) {\n            // Stop\n            clearInterval(rotate);\n            // Restart\n            startCycle();\n          }\n        };\n\n\n\n        // Pause on hover\n        if (settings.pause) {\n          $this.hover(function () {\n            clearInterval(rotate);\n          }, function () {\n            restartCycle();\n          });\n        }\n\n        // Pager click event handler\n        if (settings.pager || settings.manualControls) {\n          $tabs.bind(\"click\", function (e) {\n            e.preventDefault();\n\n            if (!settings.pauseControls) {\n              restartCycle();\n            }\n\n            // Get index of clicked tab\n            var idx = $tabs.index(this);\n\n            // Break if element is already active or currently animated\n            if (index === idx || $(\".\" + visibleClass).queue('fx').length) {\n              return;\n            }\n\n            // Remove active state from old tab and set new one\n            selectTab(idx);\n\n            // Do the animation\n            slideTo(idx);\n          })\n            .eq(0)\n            .closest(\"li\")\n            .addClass(activeClass);\n\n          // Pause when hovering pager\n          if (settings.pauseControls) {\n            $tabs.hover(function () {\n              clearInterval(rotate);\n            }, function () {\n              restartCycle();\n            });\n          }\n        }\n\n        // Navigation\n        if (settings.nav) {\n          var navMarkup =\n            \"<a href='#' class='\" + navClass + \" prev'>\" + settings.prevText + \"</a>\" +\n            \"<a href='#' class='\" + navClass + \" next'>\" + settings.nextText + \"</a>\";\n\n          // Inject navigation\n          if (options.navContainer) {\n            $(settings.navContainer).append(navMarkup);\n          } else {\n            $this.after(navMarkup);\n          }\n\n          var $trigger = $(\".\" + namespaceIdx + \"_nav\"),\n            $prev = $trigger.filter(\".prev\");\n\n          // Click event handler\n          $trigger.bind(\"click\", function (e) {\n            e.preventDefault();\n\n            var $visibleClass = $(\".\" + visibleClass);\n\n            // Prevent clicking if currently animated\n            if ($visibleClass.queue('fx').length) {\n              return;\n            }\n\n            //  Adds active class during slide animation\n            //  $(this)\n            //    .addClass(namespace + \"_active\")\n            //    .delay(fadeTime)\n            //    .queue(function (next) {\n            //      $(this).removeClass(namespace + \"_active\");\n            //      next();\n            //  });\n\n            // Determine where to slide\n            var idx = $slide.index($visibleClass),\n              prevIdx = idx - 1,\n              nextIdx = idx + 1 < length ? index + 1 : 0;\n\n            // Go to slide\n            slideTo($(this)[0] === $prev[0] ? prevIdx : nextIdx);\n            if (settings.pager || settings.manualControls) {\n              selectTab($(this)[0] === $prev[0] ? prevIdx : nextIdx);\n            }\n\n            if (!settings.pauseControls) {\n              restartCycle();\n            }\n          });\n\n          // Pause when hovering navigation\n          if (settings.pauseControls) {\n            $trigger.hover(function () {\n              clearInterval(rotate);\n            }, function () {\n              restartCycle();\n            });\n          }\n        }\n\n      }\n\n      // Max-width fallback\n      if (typeof document.body.style.maxWidth === \"undefined\" && options.maxwidth) {\n        var widthSupport = function () {\n          $this.css(\"width\", \"100%\");\n          if ($this.width() > maxw) {\n            $this.css(\"width\", maxw);\n          }\n        };\n\n        // Init fallback\n        widthSupport();\n        $(window).bind(\"resize\", function () {\n          widthSupport();\n        });\n      }\n\n    });\n\n  };\n})(jQuery, this, 0);\n\n\n\n"],"sourceRoot":"assets/scripts/"}